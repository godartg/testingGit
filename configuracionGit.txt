create a new repository on the command line
echo "# testingGit" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M Master
git remote add origin https://github.com/godartg/testingGit.git
git push -u origin Master

push an existing repository from the command line
git remote add origin https://github.com/godartg/testingGit.git
git branch -M Master
git push -u origin Master

descargar un repositorio
git clone https://github.com/godartg/testingGit.git
ingresar al proyecto
Comando para crear y cambiar a la nueva rama del desarrollador
git checkout -b "developerEjemplo"
Comando para cambiar a la nueva rama del desarrollador 
git checkout "developerEjemplo"

#guardar cambios
git add -A
git commit -m "mensaje"
git push -u origin developerEjemplo

#ignorar un archivo
paso 1
crear el archivo .gitignore al mismo nivel que la carpeta .git o la carpeta raiz donde se esta trabajando
ejemplo:
/proyectogit/.git/
/proyectogit/.gitignore
/proyectogit/otro.archivo

#ver el historial por comandos
git log -p 

#en caso de que se hallan olvidado agregar un archivo hacer:
Pasos:
1.$ git add * 
2.$ git commit amend -m "nuevo texto"

#Crear un nuevos cambios en otra rama
$ git checkout -b cambio develop

#Incorporar cambios finales a la rama de qa
$ git checkout develop
Switched to branch 'develop'
$ git merge --no-ff myfeature
Updating ea1b82a..05e9557
(Summary of changes)
$ git branch -d myfeature
Deleted branch myfeature (was 05e9557).
$ git push origin develop

#Creating a release branch
$ git checkout -b release-1.2 develop
Switched to a new branch "release-1.2"
$ ./bump-version.sh 1.2
Files modified successfully, version bumped to 1.2.
$ git commit -a -m "Bumped version number to 1.2"
[release-1.2 74d9424] Bumped version number to 1.2
1 files changed, 1 insertions(+), 1 deletions(-)

git fetch origin 
git merge origin/master